parameters:
  - name: Subscription
    default: 'DemoAZPipe'
    type: string

stages:
- stage: build_sdk
  displayName: Build SDK
  jobs:
  - job: Build_SDK_Job
    timeoutInMinutes: 120
    steps:
    - task: AzureCLI@2
      displayName: Initiating Build SDK pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              RUN_ID=$(az pipelines run \
                --name P1SDK \
                --organization https://dev.azure.com/prathambande \
                --project Playground \
                --query id \
                --parameters "BranchName=$(system.pullRequest.sourceBranch)"
              )
              echo "Pipeline run has been initiated with RUN ID: " $RUN_ID
              echo "##vso[task.setvariable variable=RUN_ID_BUILD_SDK;]$RUN_ID"
    - task: AzureCLI@2
      displayName: Monitoring Build SDK pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              echo "Monitoring Build SDK pipeline having RUN ID: " $RUN_ID_BUILD_SDK
              STATUS=$(az pipelines runs show --id $RUN_ID_BUILD_SDK --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              while [ "$STATUS" == "inProgress" ] || [ "$STATUS" == "notStarted" ]; do
                echo "Current Status: "$STATUS
                sleep 120
                STATUS=$(az pipelines runs show --id $RUN_ID_BUILD_SDK --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              done
              echo "Pipeline run has been completed with status: " $STATUS
    - task: AzureCLI@2
      displayName: Result of Build SDK pipeline run
      condition: always()
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              if [ "$AGENT_JOBSTATUS" = "Canceled" ]; then
                if [ -z "$RUN_ID_BUILD_SDK" ]; then
                  echo "Pipeline abandoned"
                  echo $(az pipelines build cancel --build-id $RUN_ID_BUILD_SDK --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv) 
                fi
              fi
              if [ -z "$RUN_ID_BUILD_SDK" ]; then
                echo "Pipeline Status: " $(az pipelines runs show --id $RUN_ID_BUILD_SDK --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
                echo "Pipeling Result: " $(az pipelines runs show --id $RUN_ID_BUILD_SDK --organization https://dev.azure.com/prathambande --project Playground --query result -o tsv)
                echo "Pipeline Link: https://dev.azure.com/prathambande/Playground/_build/results?buildId=$RUN_ID_BUILD_SDK&view=results"
              else
                echo "Run was not initiated"
              fi

- stage: build_image
  displayName: Build Image
  dependsOn: build_sdk
  jobs:
  - job: Build_Image_Job
    timeoutInMinutes: 120
    steps:
    - task: AzureCLI@2
      displayName: Initiating Build Image pipeline run
      name: Init_Build_Image_Pipe
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              RUN_ID=$(az pipelines run \
                --name P2IMG \
                --organization https://dev.azure.com/prathambande \
                --project Playground \
                --query id \
                --parameters "BranchName=$(system.pullRequest.sourceBranch)"
              )
              echo "Pipeline run has been initiated with RUN ID: " $RUN_ID
              echo "##vso[task.setvariable variable=RUN_ID_BUILD_IMAGE;]$RUN_ID"
              BUILD_NUMBER=$(az pipelines runs show \
                --id $RUN_ID \
                --organization https://dev.azure.com/prathambande \
                --project Playground \
                --query buildNumber \
                -o tsv
              )
              echo "Pipeline run has Build Number: " $BUILD_NUMBER
              echo "##vso[task.setvariable variable=BUILD_NUMBER_BUILD_IMAGE;isoutput=true]$BUILD_NUMBER"
    - task: AzureCLI@2
      displayName: Monitoring Build Image pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              echo "Monitoring Build Image pipeline having RUN ID: " $RUN_ID_BUILD_IMAGE
              STATUS=$(az pipelines runs show --id $RUN_ID_BUILD_IMAGE --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              while [ "$STATUS" == "inProgress" ] || [ "$STATUS" == "notStarted" ]; do
                echo "Current Status: "$STATUS
                sleep 120
                STATUS=$(az pipelines runs show --id $RUN_ID_BUILD_IMAGE --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              done
              echo "Pipeline run has been completed with status: " $STATUS
    - task: AzureCLI@2
      displayName: Result of Build Image pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              if [ "$AGENT_JOBSTATUS" = "Canceled" ]; then
                if [ -z "$RUN_ID_BUILD_SDK" ]; then
                  echo "Pipeline abandoned" 
                  echo $(az pipelines build cancel --build-id $RUN_ID_BUILD_IMAGE --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
                fi
              fi
              if [ -z "$RUN_ID_BUILD_SDK" ]; then
                echo "Pipeline Status: " $(az pipelines runs show --id $RUN_ID_BUILD_IMAGE --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
                echo "Pipeling Result: " $(az pipelines runs show --id $RUN_ID_BUILD_IMAGE --organization https://dev.azure.com/prathambande --project Playground --query result -o tsv)
                echo "Pipeline Link: https://dev.azure.com/prathambande/Playground/_build/results?buildId=$RUN_ID_BUILD_IMAGE&view=results"
              else
                echo "Run was not initiated"
              fi

- stage: Test
  displayName: Testing
  dependsOn: build_image
  jobs:
  - job: Test_Job
    timeoutInMinutes: 120
    variables:
      BUILD_NUMBER_BUILD_IMAGE: $[stageDependencies.build_image.Build_Image_Job.outputs['Init_Build_Image_Pipe.BUILD_NUMBER_BUILD_IMAGE']]
    steps:
    - task: AzureCLI@2
      displayName: Initiating Test pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              echo "Using Build Number: " $BUILD_NUMBER_BUILD_IMAGE
              RUN_ID=$(az pipelines run \
                --name P3TEST \
                --organization https://dev.azure.com/prathambande \
                --project Playground \
                --query id \
                --parameters "BuildNumber=$BUILD_NUMBER_BUILD_IMAGE" "CommitId=$(system.pullRequest.sourceCommitId)"
              )
              echo "Pipeline run has been initiated with RUN ID: " $RUN_ID
              echo "##vso[task.setvariable variable=RUN_ID_TEST;]$RUN_ID"
    - task: AzureCLI@2
      displayName: Monitoring Test pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              echo "Monitoring Test pipeline having RUN ID: " $RUN_ID_TEST
              STATUS=$(az pipelines runs show --id $RUN_ID_TEST --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              while [ "$STATUS" == "inProgress" ] || [ "$STATUS" == "notStarted" ]; do
                echo "Current Status: "$STATUS
                sleep 120
                STATUS=$(az pipelines runs show --id $RUN_ID_TEST --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
              done
              echo "Pipeline run has been completed with status: " $STATUS
    - task: AzureCLI@2
      displayName: Result of Test pipeline run
      env:
        AZURE_STORAGE_AUTH_MODE: 'login'
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      inputs:
        azureSubscription: ${{ parameters.Subscription }}
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
              if [ "$AGENT_JOBSTATUS" = "Canceled" ]; then
                if [ -z "$RUN_ID_BUILD_SDK" ]; then
                  echo "Pipeline abandoned" 
                  echo $(az pipelines build cancel --build-id $RUN_ID_TEST --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv) 
                fi
              fi
              if [ -z "$RUN_ID_BUILD_SDK" ]; then
                echo "Pipeline Status: " $(az pipelines runs show --id $RUN_ID_TEST --organization https://dev.azure.com/prathambande --project Playground --query status -o tsv)
                echo "Pipeling Result: " $(az pipelines runs show --id $RUN_ID_TEST --organization https://dev.azure.com/prathambande --project Playground --query result -o tsv)
                echo "Pipeline Link: https://dev.azure.com/prathambande/Playground/_build/results?buildId=$RUN_ID_TEST&view=results"
              else
                echo "Run was not initiated"
              fi
            
              
  
